# When passed a coordinate, function generates a list of threatning positions
def threat_pos(i,j,N):
    #N is the size of chess board
    l = 1
    k = j+1 #j+1
    eliminate = []
    while(k <= N):
        eliminate.append([i,k])
        if i-l < 0: pass
        else: eliminate.append([i-l,k])
        if min(i+l,N) == N: pass
        else: eliminate.append([i+l,k])
        k = k+1
        l = l+1
    #print(eliminate)
    fin_eliminate = []
    for [x,y] in eliminate:
        if y==N: pass
        else: fin_eliminate.append([x,y])
    return fin_eliminate


import random

# When function is called for a N X N chess boards, gives the position of N queens 
# such that none of the queens threaten each other (N > 3)
def queen_game(N): #N is the size of the chess board
    if N < 4: N = 4
    Q = []
    while(len(Q)<N):
        j1 = 0        
        i1 = random.randint(1,N-1)
        threats = threat_pos(i1,j1,N)
        Q = list([[i1,j1]])
        for j1 in range(1,N):
            for row in range(N):
                if [row,j1] in threats: 
                    pass
                else:
                    Q.append([row,j1])
                    break
            threats.extend(threat_pos(row,j1,N))
            #print(threats)
    return Q
    
    
    queen_game(8)
